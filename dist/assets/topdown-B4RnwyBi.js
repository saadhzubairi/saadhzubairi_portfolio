const e="topdown",t="/Projects/topdown/topdown.png",n="Top Down Shooter",s="Top Down Shooter",o="A top-down shooter game made using Unity.",a="/Projects/topdown/topdown.png",i={src:"/Projects/topdown/topdown.png",alt:"Top Down Shooter"},r="game",c={frameworks:["C++","SDL 2.0"],database:[],tools:[]},d="2D Top down shooter game with everything made from scratch, utilizing a custom game engine using C++ and SDL 2.0 as well as Photoshop and LMMS for graphical and audio assets.",l=" For my undergraduate game development project, I designed and implemented Space Shooter, a top-down game that explores dynamic gameplay elements. In this game, players navigate a lone starfighter, engaging with two distinct enemy types: nimble adversaries with direct firepower and Rangers that shoot while actively evading player projectiles. The starfighter is equipped with standard bullets and homing rockets, adding a strategic layer to the gameplay.<br/><br/>Surviving continuous waves of respawning enemies for 30 seconds triggers the Boss Level. Here, players confront a formidable modular enemy armed with four turrets. The challenge lies in strategically dismantling each turret to secure victory. The project was my first core practical application of game design principles and programming skills, showcasing an engaging and challenging space-shooting experience for players.",g="/Projects/topdown/techImg.png",p="C++ & SDL 2.0",h="The game was developed using C++ in conjunction with the SDL 2.0 library. This technology stack included SDL Fonts for dynamic text rendering, SDL Mixer for managing sound effects and music, and SDL Images for efficient handling of graphic assets. ",m="In the development process, the project directory adheres to a structured organization for practicality. Core game logic resides in Game.cpp and Game.h, while the game state is managed using static variables in Counter.cpp. User interface elements, such as buttons and labels, are segregated into distinct components.<br/><br/>Textures and sprites are efficiently handled by the TextureManager files, dynamically loading sprites based on sheet size and the specified number of rows and columns. All game entities, including the player, enemies, and boss turrets, inherit from the GameObject class, encompassing essential lifecycle functions like rendering, texture manipulation, sprite animation, translation, movement, and destruction.<br/><br/>Diverse bullet behaviors are encapsulated in the Bullets folder, with each bullet type exhibiting unique characteristics. Homing rockets autonomously track specific targets, ranger bullets follow the player's direction, and boss bullets, with distinctive textures, share a common firing pattern.<br/><br/>Helper files for managing explosions, scrolling backdrops, smoke effects, and music control contribute to the game's dynamics. The Assets folder houses graphic and audio assets, organized for accessibility. This organization ensures a methodical and modular approach throughout the development.",u="/Projects/topdown/structureImg.png",b="The game graphics were also custom made including the music (except for the background images). The game sprites were made using Adobe Photoshop and the music was made using LMMS music designer software.",w=["/Projects/topdown/asset_1.png","/Projects/topdown/asset_2.png","/Projects/topdown/asset_3.png","/Projects/topdown/asset_4.png","/Projects/topdown/asset_5.png","/Projects/topdown/asset_6.png","/Projects/topdown/asset_7.png","/Projects/topdown/asset_8.png","/Projects/topdown/asset_9.png","/Projects/topdown/asset_10.png"],f=["/Projects/topdown/screenshot1.png","/Projects/topdown/screenshot2.png"],y="https://www.youtube.com/embed/NXNNtbcrJk8?si=lMKpsaXNivazc4d4",v="Throughout the development, several challenges were encountered, leading to valuable learning experiences.<br/><br/>One significant hurdle involved implementing SDL 2.0 with C++, presenting initial difficulties that, over time, resulted in a heightened proficiency in leveraging this game development library.<br/><br/>Learning to create visually appealing sprites and art, particularly diving into the realm of pixel art, proved to be a distinct experience, emphasizing the importance of aesthetics in game design.<br/><br/>The process of programming the game's physics required a revisitation of various mathematical concepts. This challenge served as a practical application of theoretical knowledge, enhancing understanding and application skills. <br/><br/>Additionally, delving into the intricacies of music creation for the game added a unique and enjoyable learning dimension. <br/><br/>Overcoming these challenges not only contributed to the successful development of but also reinforced problem-solving skills, adaptability, and an expanded skill set in game development.",T=["https://github.com/saadhzubairi/Top_Down_Shooter_SDL_2.0"],j={id:e,image:t,name:n,title:s,subtitle:o,titleImg:a,heroImage:i,type:r,techStack:c,desc:d,introText:l,techImg:g,techHead:p,techText:h,structureText:m,structureImg:u,assetText:b,assets:w,screenshots:f,youtubeLink:y,lessonsLearned:v,links:T};export{b as assetText,w as assets,j as default,d as desc,i as heroImage,e as id,t as image,l as introText,v as lessonsLearned,T as links,n as name,f as screenshots,u as structureImg,m as structureText,o as subtitle,p as techHead,g as techImg,c as techStack,h as techText,s as title,a as titleImg,r as type,y as youtubeLink};
//# sourceMappingURL=topdown-B4RnwyBi.js.map
