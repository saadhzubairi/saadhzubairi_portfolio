const e="halpert",t="Halpert's Booking",n="Hotel booking website made with HTML & CSS.",a={liveDemo:"https://example.com/halpert-demo",github:"https://github.com/saadhzubairi/Hotel-Registration-App-Mern"},i={src:"/Projects/halpert/halpert.png",alt:"Halpert hotel booking homepage"},s={frameworks:["Node.js"],database:[],tools:["HTML5","CSS3"]},o=["Designed and implemented fully responsive hotel booking UI using HTML and CSS","Developed homepage, destination views, and search pages with modular layouts","Implemented date picker and calendar modules with CSS transitions","Focused on UI/UX principles to ensure intuitive navigation and visual consistency"],l="Built using **component-based static HTML & CSS** with semantic structure and performance-first design. Emphasis was placed on clarity, responsiveness, and a fully front-end architecture.",r=["Halpert's Booking is a static web app that demonstrates a clean, user-friendly hotel booking interface built entirely with HTML5 and CSS3. The goal was to design a visually engaging, accessible, and modern hotel booking interface without relying on frontend JavaScript frameworks.","The layout features modular sections including a homepage, destination previews, a minimal search panel, and a date-picker for booking trips. It's ideal as a frontend portfolio demonstration of layout design and UI skill without heavy dependencies."],c=[{src:"/Projects/halpert/home.png",alt:"Homepage with gradient nav and hover effects"},{src:"/Projects/halpert/view.png",alt:"Hotel types and destination preview grid"},{src:"/Projects/halpert/list.png",alt:"Search results layout with sticky helper pane"},{src:"/Projects/halpert/calendar.png",alt:"Date selection using styled calendar UI"}],d=[{challenge:"Creating responsive layouts using only raw CSS without utility libraries",solution:"Used Flexbox and media queries extensively, and modularized layout patterns. Learned deep control of native HTML layout behaviors and responsive design principles."},{challenge:"Maintaining consistency across pages without templating",solution:"Created reusable layout blocks and CSS components using BEM-style naming. Reinforced the importance of clean code organization and semantic structuring in static builds."}],p={hardSkills:["Responsive Web Design","Flexbox & Grid","Semantic HTML","UI Theming with CSS","Component-Based Layouts"],softSkills:["Attention to Design Detail","UX-First Thinking","Cross-Device Compatibility","Visual Hierarchy Awareness"]},g={previous:{name:"Talent Hive",slug:"talenthive"},next:{name:"Project Nebula",slug:"project-nebula"}},h={id:e,title:t,subtitle:n,links:a,heroImage:i,techStack:s,myResponsibilities:o,methodology:l,about:r,gallery:c,challengesAndLessons:d,skillsDeveloped:p,navigation:g};export{r as about,d as challengesAndLessons,h as default,c as gallery,i as heroImage,e as id,a as links,l as methodology,o as myResponsibilities,g as navigation,p as skillsDeveloped,n as subtitle,s as techStack,t as title};
//# sourceMappingURL=halpert-DEDU-6qZ.js.map
