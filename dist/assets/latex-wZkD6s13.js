const e="latex",t="LaTeX Lite",n="Make LaTeX documents with ease.",a={liveDemo:"https://example.com/latex-lite-demo",github:"https://github.com/saadhzubairi/SE_LATEX"},i={src:"/Projects/latex/latex.png",alt:"LaTeX Lite application splash screen"},o={frameworks:["JavaFX"],database:[],tools:["Java","CSS3"]},s=["Designed and implemented JavaFX-based desktop interface for LaTeX generation","Built modular components for forms, preview, list generation, and code insertion","Developed live preview engine reflecting structured content creation","Engineered undo functionality and state-controlled UI flows for lists and sections","Handled dynamic formatting for code, file paths, and documents"],r="Built using **modular desktop UI design** principles with a focus on structured content input, live feedback, and export consistency. Prioritized intuitive UX for users unfamiliar with LaTeX syntax.",l=["LaTeX Lite is a beginner-friendly desktop app designed to help users generate LaTeX documents without prior exposure to LaTeX syntax. It enables structured document building through intuitive inputs and real-time previewing.","The app offers configurable document types, paragraph/section creation, list builders, code formatters, and path inserters â€” all wrapped in a JavaFX UI with live preview. It significantly reduces the learning curve for new LaTeX users.","Upon finalizing the content, users can export the generated LaTeX code, paste it into any LaTeX compiler (like MiKTeX), and get perfectly formatted documents consistent with the preview."],c=[{src:"/Projects/latex/1.png",alt:"Initial document configuration form"},{src:"/Projects/latex/2.png",alt:"Combo-box selection of attributes"},{src:"/Projects/latex/3.png",alt:"Main interface with controls and preview pane"},{src:"/Projects/latex/4.png",alt:"Simple calendar UI module"},{src:"/Projects/latex/5.png",alt:"Paragraph and section input interface"},{src:"/Projects/latex/6.png",alt:"List generation with real-time preview"},{src:"/Projects/latex/7.png",alt:"Alternate interface for list reordering"},{src:"/Projects/latex/8.png",alt:"Dialog box for adding list items"},{src:"/Projects/latex/9.png",alt:"Code block input and formatting"},{src:"/Projects/latex/10.png",alt:"Code preview output"},{src:"/Projects/latex/11.png",alt:"File path and directory input"},{src:"/Projects/latex/12.png",alt:"Modify document setup options"},{src:"/Projects/latex/13.png",alt:"Generate final LaTeX output"},{src:"/Projects/latex/14.png",alt:"Compiled LaTeX output screen"}],d=[{challenge:"Designing a user-friendly interface that maps to complex LaTeX structures",solution:"Built structured UI components with clear semantics (e.g., for sections, lists, and code) and provided live preview feedback. Learned how to simplify abstract syntax through visual tools."},{challenge:"Maintaining real-time preview fidelity with final LaTeX output",solution:"Used strict formatting templates and sync logic between UI inputs and preview rendering. This emphasized the importance of WYSIWYG consistency in tooling UX."}],p={hardSkills:["Desktop UI Design with JavaFX","State Management in Java","Live Preview and Data Binding","Dynamic Content Rendering","Custom Form Component Development"],softSkills:["UX Design for Technical Tools","Reducing User Onboarding Complexity","Feature Modularity","Designing for Accessibility and Clarity"]},u={previous:{name:"Halpert's Booking",slug:"halpert"},next:{name:"Project Nebula",slug:"project-nebula"}},g={id:e,title:t,subtitle:n,links:a,heroImage:i,techStack:o,myResponsibilities:s,methodology:r,about:l,gallery:c,challengesAndLessons:d,skillsDeveloped:p,navigation:u};export{l as about,d as challengesAndLessons,g as default,c as gallery,i as heroImage,e as id,a as links,r as methodology,s as myResponsibilities,u as navigation,p as skillsDeveloped,n as subtitle,o as techStack,t as title};
//# sourceMappingURL=latex-wZkD6s13.js.map
